import unittest

import pandas.testing
from pandas import DataFrame

from src.pg_client import MultiInstanceDBFetcher


class TestBatchData(unittest.TestCase):
    def setUp(self) -> None:
        db_url = "postgres:postgres@localhost:5432/postgres"
        self.fetcher = MultiInstanceDBFetcher([db_url])
        with open(
            "./tests/queries/batch_rewards_test_db.sql", "r", encoding="utf-8"
        ) as file:
            self.fetcher.connections[0].execute(file.read())

    def test_get_batch_data(self):
        start_block, end_block = "0", "100"
        batch_data = self.fetcher.get_batch_data(start_block, end_block)
        expected = DataFrame(
            {
                "auction_id": [
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                ],
                "winning_solver": [
                    "0x5111111111111111111111111111111111111111",
                    "0x5222222222222222222222222222222222222222",
                    "0x5111111111111111111111111111111111111111",
                    "0x5111111111111111111111111111111111111111",
                    "0x5111111111111111111111111111111111111111",
                    "0x5111111111111111111111111111111111111111",
                    "0x5111111111111111111111111111111111111111",
                    "0x5111111111111111111111111111111111111111",
                    "0x5333333333333333333333333333333333333333",
                    "0x01",
                    "0x02",
                    "0x01",
                    "0x02",
                    "0x01",
                    "0x02",
                    "0x03",
                    "0x03",
                    "0x03",
                    "0x03",
                ],
                "block_deadline": [
                    10,
                    11,
                    12,
                    14,
                    15,
                    30,
                    35,
                    36,
                    37,
                    60,
                    61,
                    62,
                    62,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                ],
                "winning_score": [
                    6.000000e18,
                    1.200000e19,
                    2.100000e19,
                    5.000000e18,
                    1.000000e19,
                    6.000000e18,
                    5.000000e18,
                    5.000000e18,
                    5.000000e18,
                    5.000000e14,
                    5.000000e14,
                    1.000000e15,
                    2.000000e15,
                    5.000000e14,
                    5.000000e14,
                    1.000000e15,
                    1.500000e15,
                    5.000000e14,
                    5.000000e14,
                ],
                "reference_score": [
                    4.000000e18,
                    3.000000e18,
                    3.000000e18,
                    3.000000e18,
                    9.000000e18,
                    0.000000e00,
                    0.000000e00,
                    1.000000e18,
                    4.000000e18,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                    0.000000e00,
                ],
                "tx_hash": [
                    "0x7111",
                    "0x7222",
                    None,
                    "0x7333",
                    "0x7444",
                    "0x7555",
                    None,
                    "0x7666",
                    None,
                    "0x01",
                    "0x02",
                    "0x03",
                    "0x04",
                    "0x05",
                    "0x06",
                    "0x07",
                    "0x08",
                    "0x09",
                    "0x0a",
                ],
                "block_number": [
                    1.0,
                    2.0,
                    None,
                    5.0,
                    20.0,
                    25.0,
                    None,
                    26.0,
                    None,
                    51.0,
                    52.0,
                    53.0,
                    54.0,
                    55.0,
                    56.0,
                    57.0,
                    58.0,
                    59.0,
                    60.0,
                ],
                "log_index": [
                    10.0,
                    10.0,
                    None,
                    10.0,
                    10.0,
                    10.0,
                    None,
                    10.0,
                    None,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                    10.0,
                ],
                "effective_gas_price": [
                    2.000000e09,
                    3.000000e09,
                    None,
                    2.000000e09,
                    2.000000e09,
                    2.000000e09,
                    None,
                    2.000000e09,
                    None,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                    2.500000e10,
                ],
                "gas_used": [
                    100000.0,
                    150000.0,
                    None,
                    100000.0,
                    100000.0,
                    100000.0,
                    None,
                    100000.0,
                    None,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                    100000.0,
                ],
                "surplus": [
                    6.000000e18,
                    1.200000e19,
                    None,
                    5.000000e18,
                    0.000000e00,
                    6.000000e18,
                    None,
                    0.000000e00,
                    None,
                    5.000000e14,
                    5.000000e14,
                    5.000000e14,
                    5.000000e14,
                    5.000000e14,
                    5.000000e14,
                    7.500000e14,
                    1.000000e15,
                    5.000000e14,
                    2.500000e14,
                ],
                "total_fee": [
                    2.000000e14,
                    4.000000e14,
                    None,
                    2.500000e14,
                    0.000000e00,
                    2.000000e14,
                    None,
                    4.000000e14,
                    None,
                    2.500000e15,
                    2.500000e15,
                    3.000000e15,
                    4.000000e15,
                    2.500000e15,
                    2.500000e15,
                    2.500000e15,
                    2.500000e15,
                    2.500000e15,
                    2.500000e15,
                ],
                "participating_solvers": [
                    [
                        "0x5222222222222222222222222222222222222222",
                        "0x5333333333333333333333333333333333333333",
                        "0x5111111111111111111111111111111111111111",
                    ],
                    [
                        "0x5444444444444444444444444444444444444444",
                        "0x5333333333333333333333333333333333333333",
                        "0x5222222222222222222222222222222222222222",
                    ],
                    [
                        "0x5444444444444444444444444444444444444444",
                        "0x5333333333333333333333333333333333333333",
                        "0x5111111111111111111111111111111111111111",
                    ],
                    [
                        "0x5444444444444444444444444444444444444444",
                        "0x5333333333333333333333333333333333333333",
                        "0x5111111111111111111111111111111111111111",
                    ],
                    [
                        "0x5444444444444444444444444444444444444444",
                        "0x5333333333333333333333333333333333333333",
                        "0x5111111111111111111111111111111111111111",
                    ],
                    ["0x5111111111111111111111111111111111111111"],
                    ["0x5111111111111111111111111111111111111111"],
                    [
                        "0x5444444444444444444444444444444444444444",
                        "0x5333333333333333333333333333333333333333",
                        "0x5111111111111111111111111111111111111111",
                    ],
                    [
                        "0x5444444444444444444444444444444444444444",
                        "0x5333333333333333333333333333333333333333",
                    ],
                    ["0x01"],
                    ["0x02"],
                    ["0x01"],
                    ["0x02"],
                    ["0x01"],
                    ["0x02"],
                    ["0x03"],
                    ["0x03"],
                    ["0x03"],
                    ["0x03"],
                ],
            }
        ).astype(object)
        self.assertIsNone(pandas.testing.assert_frame_equal(expected, batch_data))


if __name__ == "__main__":
    unittest.main()
